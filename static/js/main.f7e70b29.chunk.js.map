{"version":3,"sources":["components/TypedJs.js","components/Search.js","localStorageHelper.js","actions/index.js","components/MovieButton.js","components/CRUD/MovieList.js","history.js","components/GoogleAuth.js","components/Banner.js","components/Header.js","components/App.js","reducers/index.js","reducers/movieReducers.js","reducers/fetchAuth.js","reducers/fetchStatus.js","reducers/getId.js","reducers/nominatedFilm.js","index.js"],"names":["TypedJs","strings","this","props","console","log","options","typeSpeed","backSpeed","loop","loopCount","Infinity","typed","Typed","el","destroy","style","whiteSpace","ref","React","Component","Search","cname","id","value","onChange","type","placeholder","className","autoComplete","LocalStorageHelper","add","v","a","JSON","parse","localStorage","getItem","push","setItem","stringify","get","k","removeItem","nominated","Object","values","filter","movie","imdbID","getGoogleAuth","dispatch","Promise","resolve","reject","window","gapi","load","client","init","clientId","scope","auth","auth2","getAuthInstance","payload","MovieButton","state","status","onClickHandler","setState","deleteMovie","saveMovies","localMovies","isFound","find","Title","isFoundInRS","reduxMovies","every","nominatedColor","disabledClass","length","pointerEvents","opacity","onClick","connect","nominatedFilm","getState","signInId","firsthalf","split","splice","join","secondhalf","currentUser","getBasicProfile","getGivenName","myFavMovie","MovieList","term","onChangeHandler","e","clearTimeout","timer","target","setTimeout","trim","searchMovies","renderMovieHelper","renderMovies","movies","hideButton","nominatedFilms","signInID","data","error","map","$","dimmer","on","Poster","src","srcSet","sizes","alt","Year","renderResultsFound","moviesArr","renderContent","labelClass","label","textAlign","marginTop","createRef","hoverImg","fetchNominatedMovies","queryResults","q","toLowerCase","axios","response","Error","createBrowserHistory","GoogleAuth","onAuthChange","isSignedIn","signIn","current","getId","signOut","signUserIn","signUserOut","renderAuthButtons","fetchStatus","Fragment","callback","listen","Banner","totalNoms","data-text","backgroundColor","Header","to","App","history","path","component","exact","combineReducers","dummy","action","nested","forEach","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7e70b29.chunk.js","sourcesContent":["import Typed from \"typed.js\";\r\nimport React from \"react\";\r\n\r\n//taken from https://jsfiddle.net/mattboldt/ovat9jmp/\r\n\r\nclass TypedJs extends React.Component {\r\n  componentDidMount() {\r\n    // If you want to pass more options as props, simply add\r\n    // your desired props to this destructuring assignment.\r\n    const { strings } = this.props;\r\n    console.log(this.props);\r\n    // You can pass other options here, such as typing speed, back speed, etc.\r\n    const options = {\r\n      strings: strings,\r\n      typeSpeed: 50,\r\n      backSpeed: 50,\r\n      loop: true,\r\n      loopCount: Infinity,\r\n    };\r\n    // this.el refers to the <span> in the render() method\r\n    this.typed = new Typed(this.el, options);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Make sure to destroy Typed instance on unmounting\r\n    // to prevent memory leaks\r\n    this.typed.destroy();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span\r\n        style={{ whiteSpace: \"pre\" }}\r\n        ref={(el) => {\r\n          this.el = el;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default TypedJs;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ cname = \"\", id = \"\", value, onChange }) => {\r\n  return (\r\n    <input\r\n      value={value}\r\n      onChange={onChange}\r\n      type=\"text\"\r\n      placeholder=\"Type here...\"\r\n      id={id}\r\n      className={cname}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","class LocalStorageHelper {\r\n  static add = (v) => {\r\n    let a = [];\r\n    // Parse the serialized data back into an aray of objects\r\n    a = JSON.parse(localStorage.getItem(\"nominatedMovies\")) || [];\r\n    // Push the new data (whether it be an object or anything else) onto the array\r\n    a.push(v);\r\n    // Re-serialize the array back into a string and store it in localStorage\r\n    localStorage.setItem(\"nominatedMovies\", JSON.stringify(a));\r\n  };\r\n\r\n  static get = (k) => {\r\n    const selected = JSON.parse(localStorage.getItem(k)) || [];\r\n    return selected;\r\n  };\r\n\r\n  static removeItem = (k, id) => {\r\n    let nominated = Object.values(this.get(k));\r\n    nominated = JSON.stringify(\r\n      nominated.filter((movie) => movie.imdbID !== id)\r\n    );\r\n    localStorage.setItem(k, nominated);\r\n    console.log(\"successfully vaporized off the earth\");\r\n  };\r\n}\r\n\r\nexport default LocalStorageHelper;\r\n","import axios from \"axios\";\r\nimport LocalStorageHelper from \"../localStorageHelper\";\r\n\r\nexport const signIn = (id) => {\r\n  return {\r\n    type: \"SIGN_IN\",\r\n    id,\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: \"SIGN_OUT\",\r\n  };\r\n};\r\n\r\nexport const searchMovies = (q) => async (dispatch) => {\r\n  q = q.toLowerCase().trim();\r\n  const response = await axios.get(\r\n    `https://www.omdbapi.com/?apikey=b3c713a5&s=${q}&type=movie`\r\n  );\r\n\r\n  if (response.data.Search) {\r\n    console.log(\"we have search results with that query\");\r\n    dispatch({ type: \"SEARCH_MOVIE\", payload: response.data });\r\n  } else {\r\n    console.log(\"we dont have search results with that query\");\r\n    dispatch({ type: \"SEARCH_MOVIE_U\", payload: response.data.Error });\r\n  }\r\n};\r\n\r\nexport const fetchStatus = (callback) => async (dispatch, getState) => {\r\n  //1. Get the GAuth object and update its status\r\n  //when the sign in/out button is pressed.\r\n\r\n  await dispatch(getGoogleAuth());\r\n  //2. Get the initial status of the user and show it on the screen.\r\n  const auth = getState().auth;\r\n  callback(auth.isSignedIn.get());\r\n\r\n  //3. Update the status of auth and store it int he store'\r\n  dispatch({ type: \"FETCH_GSTATUS\", payload: auth.isSignedIn.get() });\r\n\r\n  // 4. attach a listener to whenever the isSignedIn property changes.\r\n  // 5. Update the store and the component.\r\n  auth.isSignedIn.listen(() => {\r\n    console.log(\"the listened function was called.\");\r\n    callback(auth.isSignedIn.get());\r\n    dispatch({ type: \"FETCH_GSTATUS\", payload: auth.isSignedIn.get() });\r\n  });\r\n};\r\n\r\nexport const getGoogleAuth = () => async (dispatch) => {\r\n  await new Promise((resolve, reject) => {\r\n    window.gapi.load(\"client:auth2\", resolve);\r\n  });\r\n\r\n  await window.gapi.client.init({\r\n    clientId:\r\n      \"966761145318-lchet6c8rli1o5jk7k82nrug9fpqe8og.apps.googleusercontent.com\",\r\n    scope: \"profile\",\r\n  });\r\n\r\n  const auth = window.gapi.auth2.getAuthInstance();\r\n  dispatch({ type: \"FETCH_GAUTH\", payload: auth });\r\n};\r\n\r\nexport const saveMovies = (movie) => async (dispatch, getState) => {\r\n  //what do i want to happen\r\n  //I want user to have their movie saved in the server\r\n  //use part of their sign in id\r\n  //auth2.currentUser.get().getBasicProfile() for the names of the user.\r\n  //their id in the server can be: take first five letters of their given name in between the first 5 and\r\n  //last 5 numbers.\r\n  const { signInId, auth } = getState();\r\n  console.log(getState());\r\n  let firsthalf = signInId.id.split(\"\").splice(0, 5).join(\"\");\r\n  let secondhalf = signInId.id\r\n    .split(\"\")\r\n    .splice(signInId.id.length - 5)\r\n    .join(\"\");\r\n  const uniqueName = `${firsthalf}${auth.currentUser\r\n    .get()\r\n    .getBasicProfile()\r\n    .getGivenName()}${secondhalf}`;\r\n\r\n  const myFavMovie = {\r\n    ...movie,\r\n  };\r\n\r\n  if (\r\n    LocalStorageHelper.get(\"nominatedMovies\").every(\r\n      (movie) => movie.Title !== myFavMovie.Title\r\n    )\r\n  ) {\r\n    LocalStorageHelper.add(myFavMovie);\r\n  }\r\n\r\n  dispatch({ type: \"NOM_FILM\", payload: myFavMovie });\r\n};\r\n\r\nexport const deleteMovie = (id) => async (dispatch, getState) => {\r\n  //take the deleted movies id and use it to delete the fil off nominated list\r\n  console.log(\"id\", id);\r\n  LocalStorageHelper.removeItem(\"nominatedMovies\", id);\r\n  dispatch({ type: \"DELETE_MOVIE\", payload: id });\r\n};\r\n\r\nexport const fetchNominatedMovies = () => {\r\n  //get the movies inside localStorage\r\n  return {\r\n    type: \"FETCH_ALL\",\r\n    payload: LocalStorageHelper.get(\"nominatedMovies\"),\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { saveMovies, deleteMovie } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass MovieButton extends React.Component {\r\n  state = { status: \"Nominate\" };\r\n\r\n  // if (Object.values(this.props.reduxMovies).length === 5) {\r\n  //   console.log(\"status\", this.state);\r\n  //   if (this.state.status === \"Nominated\") {\r\n  //     console.log(this.props.movie, 1);\r\n  //     this.setState({ disabled: false });\r\n  //   } else {\r\n  //     this.setState({ disabled: true });\r\n  //     console.log(this.props.movie, 2);\r\n  //   }\r\n  // }\r\n\r\n  componentDidMount() {\r\n    if (!JSON.parse(localStorage.getItem(\"nominatedMovies\"))) {\r\n      return;\r\n    }\r\n\r\n    const localMovies = localStorage.getItem(\"nominatedMovies\");\r\n    const isFound = JSON.parse(localMovies).find(\r\n      (movie) => movie.Title === this.props.movie.Title\r\n    );\r\n\r\n    //RS = redux store\r\n    const isFoundInRS = !Object.values(this.props.reduxMovies).every(\r\n      (movie) => movie.Title !== this.props.movie.Title\r\n    );\r\n\r\n    if (isFound && isFoundInRS) {\r\n      this.setState({ status: \"Nominated\" });\r\n      this.props.saveMovies(this.props.movie);\r\n    }\r\n  }\r\n\r\n  onClickHandler = () => {\r\n    if (this.state.status === \"Nominated\") {\r\n      this.setState({ status: \"Nominate\" });\r\n      this.props.deleteMovie(this.props.movie.imdbID);\r\n    } else {\r\n      this.setState({ status: \"Nominated\" });\r\n      this.props.saveMovies(this.props.movie);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let nominatedColor = this.state.status === \"Nominated\" ? \"positive\" : \"\";\r\n    let disabledClass = {};\r\n    if (\r\n      this.state.status === \"Nominate\" &&\r\n      Object.values(this.props.reduxMovies).length === 5\r\n    ) {\r\n      disabledClass = { pointerEvents: \"none\", opacity: \"0.4\" };\r\n    }\r\n\r\n    return (\r\n      <div className=\"center\">\r\n        <div\r\n          className={`ui toggle button ${nominatedColor}`}\r\n          style={disabledClass}\r\n          onClick={this.onClickHandler}\r\n        >\r\n          {this.state.status}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { reduxMovies: state.nominatedFilm };\r\n};\r\n\r\nexport default connect(mapStateToProps, { saveMovies, deleteMovie })(\r\n  MovieButton\r\n);\r\n","import React, { Component } from \"react\";\r\nimport TypedJs from \"../TypedJs\";\r\nimport \"../../css/MovieList.css\";\r\nimport Search from \"../Search\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchMovies, fetchNominatedMovies } from \"../../actions\";\r\nimport MovieButton from \"../MovieButton\";\r\n\r\nclass MovieList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.label = React.createRef();\r\n    this.hoverImg = React.createRef();\r\n  }\r\n\r\n  state = { term: \"\" };\r\n\r\n  componentDidMount() {\r\n    this.timer = null;\r\n    this.props.fetchNominatedMovies();\r\n  }\r\n\r\n  onChangeHandler = (e) => {\r\n    clearTimeout(this.timer);\r\n    this.setState({ term: e.target.value });\r\n    this.timer = setTimeout(() => {\r\n      if (e.target.value.trim().length === 0) {\r\n        this.props.searchMovies(\"\");\r\n        return;\r\n      }\r\n      this.props.searchMovies(e.target.value);\r\n    }, 400);\r\n  };\r\n\r\n  renderMovieHelper = (movie, options = null) => {\r\n    return (\r\n      <div className=\"ui dimmer \">\r\n        <div className=\"content\">\r\n          <MovieButton movie={movie} options={options}></MovieButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderMovies = () => {\r\n    const { movies, nominatedFilms } = this.props;\r\n    const { signInID } = this.props;\r\n    const hideButton =\r\n      signInID === null\r\n        ? (data) => {\r\n            return \"\";\r\n          }\r\n        : this.renderMovieHelper;\r\n\r\n    if (movies.error) {\r\n      if (movies.error === \"Incorrect IMDb ID.\" && this.state.term === \"\") {\r\n        return \"\";\r\n      }\r\n      return movies.error;\r\n    }\r\n\r\n    return Object.values(movies).map((movie) => {\r\n      return (\r\n        <div\r\n          className=\"eight wide mobile four wide tablet three wide computer column stretched\"\r\n          key={movie.imdbID}\r\n        >\r\n          <div className=\"ui special cards\">\r\n            <div className=\"eq-card ui card fluid\">\r\n              <div\r\n                className=\"blurring dimmable image\"\r\n                ref={() => {\r\n                  window.$(\".special.cards .image\").dimmer({\r\n                    on: \"hover\",\r\n                  });\r\n                }}\r\n              >\r\n                {movie.Poster !== \"N/A\" ? (\r\n                  <img src={movie.Poster} className=\"poster-img\"></img>\r\n                ) : (\r\n                  <img\r\n                    src=\"https://placehold.it/300x200\"\r\n                    srcSet=\"https://placehold.it/300x200 300w\"\r\n                    sizes=\"100vw\"\r\n                    alt=\"Placeholder\"\r\n                  />\r\n                )}\r\n                {hideButton(movie)}\r\n              </div>\r\n              <div className=\"content\">\r\n                <a className=\"header\">{movie.Title}</a>\r\n                <div className=\"meta\">\r\n                  <span className=\"date\">Created in {movie.Year}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  renderResultsFound = () => {\r\n    const { movies } = this.props;\r\n    const moviesArr = Object.values(movies);\r\n    if (moviesArr.length === 1 && this.state.term.trim() !== \"\") {\r\n      return moviesArr[0];\r\n    }\r\n    if (this.state.term.trim() === \"\") return null;\r\n    return moviesArr.length + \" results found!\";\r\n  };\r\n\r\n  renderContent = () => {\r\n    const labelClass = this.state.term.trim().length === 0 ? \"show\" : \"hide\";\r\n\r\n    return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui center aligned grid\">\r\n          <div className={`sixteen wide column ${labelClass} typed-container`}>\r\n            <span className=\"prefix-typed\">FIND YOUR</span>\r\n            <TypedJs\r\n              strings={[\"<strong>MOVIE</strong>\"]}\r\n              className=\"typed_string\"\r\n            ></TypedJs>\r\n          </div>\r\n\r\n          <div className={`ten wide column search-container ${labelClass}`}>\r\n            <h1 ref={this.label}>Search</h1>\r\n            <div className=\"ui large transparent fluid input\">\r\n              <Search\r\n                cname=\"ui center aligned\"\r\n                id=\"transparent-input\"\r\n                value={this.state.term}\r\n                onChange={this.onChangeHandler}\r\n              ></Search>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"ui grid\"\r\n          style={{ textAlign: \"right\", marginTop: \"-1.25rem\" }}\r\n        >\r\n          <div className=\"thirteen wide column\">\r\n            <span>{this.renderResultsFound()}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"ui centered align grid\">{this.renderMovies()}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.renderContent();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //console.log(state);\r\n  return {\r\n    movies: state.queryResults,\r\n    signInID: state.signInId.id,\r\n    nominatedFilms: state.nominatedFilm,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { searchMovies, fetchNominatedMovies })(\r\n  MovieList\r\n);\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\r\nimport \"../css/GoogleAuth.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStatus, signIn, signOut } from \"../actions\";\r\n\r\nclass GoogleAuth extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStatus(this.onAuthChange);\r\n  }\r\n\r\n  onAuthChange = (isSignedIn) => {\r\n    if (isSignedIn) {\r\n      //later: get user id if signed in already.\r\n      this.props.signIn(this.props.current.currentUser.get().getId());\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n\r\n  signUserIn = () => {\r\n    this.props.current.signIn();\r\n  };\r\n\r\n  signUserOut = () => {\r\n    this.props.current.signOut();\r\n  };\r\n\r\n  renderAuthButtons = () => {\r\n    if (this.props.isSignedIn === true) {\r\n      return (\r\n        <button\r\n          className=\"negative ui button so-button\"\r\n          onClick={this.signUserOut}\r\n        >\r\n          Sign Out\r\n        </button>\r\n      );\r\n    } else if (this.props.isSignedIn === false) {\r\n      return (\r\n        <button\r\n          onClick={this.signUserIn}\r\n          className=\"positive ui button so-button\"\r\n        >\r\n          Sign In\r\n        </button>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  render() {\r\n    return <React.Fragment>{this.renderAuthButtons()}</React.Fragment>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { current: state.auth, isSignedIn: state.isSignedIn };\r\n};\r\nexport default connect(mapStateToProps, { fetchStatus, signIn, signOut })(\r\n  GoogleAuth\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Banner extends React.Component {\r\n  render() {\r\n    let marginTop = { marginTop: \"2rem\" };\r\n\r\n    if (this.props.totalNoms.length < 5) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"ui center aligned grid\" style={marginTop}>\r\n        <div\r\n          className=\"ui column banner test ad\"\r\n          data-text=\"You have reached the maximum number of nominations (5).\"\r\n          style={{ backgroundColor: \"#252a4d\" }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { totalNoms: Object.values(state.nominatedFilm) };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Banner);\r\n","import React from \"react\";\r\nimport GoogleAuth from \"./GoogleAuth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Banner from \"./Banner\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <Banner></Banner>\r\n      <div className=\"ui secondary menu\">\r\n        <Link to=\"/movies\" className=\"item\">\r\n          Shoppies\r\n        </Link>\r\n        <div className=\"right menu\">\r\n          <GoogleAuth></GoogleAuth>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Route, Router } from \"react-router-dom\";\r\nimport MovieList from \"./CRUD/MovieList\";\r\nimport history from \"../history\";\r\nimport Header from \"./Header\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <Router history={history}>\r\n        <Header></Header>\r\n        <Route path=\"/movies\" component={MovieList} exact></Route>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport movieReducers from \"./movieReducers\";\r\nimport fetchAuth from \"./fetchAuth\";\r\nimport fetchStatus from \"./fetchStatus\";\r\nimport getId from \"./getId\";\r\nimport nominatedFilm from \"./nominatedFilm\";\r\n\r\nexport default combineReducers({\r\n  dummy: () => \"some dummy code here, nothing much going on\",\r\n  queryResults: movieReducers,\r\n  auth: fetchAuth,\r\n  isSignedIn: fetchStatus,\r\n  signInId: getId,\r\n  nominatedFilm,\r\n});\r\n","export default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH_MOVIE\":\r\n      return { ...action.payload.Search };\r\n    case \"SEARCH_MOVIE_U\":\r\n      return { error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_GAUTH\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_GSTATUS\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = { isSignedIn: null, id: null }, action) => {\r\n  switch (action.type) {\r\n    case \"SIGN_IN\":\r\n      return { ...state, isSignedIn: true, id: action.id };\r\n    case \"SIGN_OUT\":\r\n      return { ...state, isSignedIn: false, id: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"NOM_FILM\":\r\n      return { ...state, [action.payload.imdbID]: action.payload };\r\n    case \"DELETE_MOVIE\":\r\n      delete state[action.payload];\r\n      return { ...state };\r\n    case \"FETCH_ALL\":\r\n      const nested = {};\r\n      action.payload.forEach((movie) => {\r\n        nested[movie.imdbID] = movie;\r\n      });\r\n      return { ...state, ...nested };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./css/global.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, createStore, compose } from \"redux\";\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App></App>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}